#!/bin/sh

# chkconfig:   2345 20 88
# description: SDR Master script. Starts and stops each recorder
#
#  Copyright (c) 2014 Stefan Parvu (www.systemdatarecorder.org).
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software Foundation,
#  Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#  (http://www.gnu.org/copyleft/gpl.html)

# SDR VERSION: 1.00

RETVAL=0
OS_NAME=`uname -s`
SDR_ROOT="/opt/sdr"
SDR_ETC=${SDR_ROOT}/etc
SDR_LOG=${SDR_ROOT}/log
RECORDERS="sys cpu disk nic hdw"

# test all startups
test -f ${SDR_ETC}/sysrec.start  || exit 0
test -f ${SDR_ETC}/cpurec.start  || exit 0
test -f ${SDR_ETC}/diskrec.start || exit 0
test -f ${SDR_ETC}/nicrec.start  || exit 0
test -f ${SDR_ETC}/hdwrec.start  || exit 0
test -f ${SDR_ETC}/jvmrec.start  || exit 0
test -f ${SDR_ETC}/netrec.start  || exit 0
test -f ${SDR_ETC}/procrec.start || exit 0
test -f ${SDR_ETC}/webrec.start  || exit 0
test -f ${SDR_ETC}/xenrec.start  || exit 0


start() {
    echo "Starting SDR recorders"

    for rec in $RECORDERS
    do
        RETVAL=0

        if [ "X${OS_NAME}" = "XSunOS" ]; then
            echo " ${rec}rec: \c"
        else
            echo -n " ${rec}rec: "
        fi
           
        # check pid before start
        if [ -f ${SDR_LOG}/${rec}rec.pid ]; then
            kill -0 `cat ${SDR_LOG}/${rec}rec.pid` >/dev/null 2>&1
            if [ $? -ne 0 ]; then
                ${SDR_ETC}/${rec}rec.start
                RETVAL=$?
            else
                RETVAL=1
            fi
            [ $RETVAL -eq 0 ] && echo "ok" || echo "failed"
        else
            # no pid files
            ${SDR_ETC}/${rec}rec.start
            RETVAL=$?
            [ $RETVAL -eq 0 ] && echo "ok" || echo "failed"
        fi
    done

    return $RETVAL
}


stop() {
    echo "Stopping SDR recorders"

    for rec in $RECORDERS
    do
        RETVAL=0

        if [ "X${OS_NAME}" = "XSunOS" ]; then
            echo " ${rec}rec: \c"
        else
            echo -n " ${rec}rec: "
        fi

        if [ -f ${SDR_LOG}/${rec}rec.pid ]; then
            # webrec
            if [ "X$rec" = "Xweb" ]; then
                case "$OS_NAME" in
                  SunOS)
                   kill `ptree \`cat ${SDR_LOG}/webrec.pid\` | awk '{print $1}' | xargs | awk '{print $2}'` >/dev/null 2>&1
                   RETVAL=$?
                   [ $RETVAL -eq 0 ] && echo "ok" || echo "failed"
                   continue
                   ;;
 
                  Linux)
                   kill `cat ${SDR_LOG}/webrec.pid` >/dev/null 2>&1
                   RETVAL=$?
                   [ $RETVAL -eq 0 ] && echo "ok" || echo "failed"
                   continue
                   ;;

                  *)
                   echo "Error: not supported OS"
                   exit 1
                   ;;
                esac
            fi
                 
            kill `cat ${SDR_LOG}/${rec}rec.pid` >/dev/null 2>&1
            RETVAL=$?
            [ $RETVAL -eq 0 ] && echo "ok" || echo "failed"

        else
            RETVAL=1
            [ $RETVAL -eq 0 ] && echo "ok" || echo "failed"
        fi
    done

    return $RETVAL
}

case "$1" in
   start)
      start
      ;;
   stop)
      stop
      ;;
   restart)
      stop
      start
      ;;
   *)
      echo "Usage: $0 {start|stop|restart}"
      exit 1
esac
exit $RETVAL

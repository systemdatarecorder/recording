
========================
SystemDataRecorder Linux
========================

Recording Module

OS                   : RedHat Enterprise Linux 5.x+ 32/64bit
                       Ubuntu Server Edition 10.04+ 32/64bit
                       CentOS 5.x+ 32/64bit
                       Debian 6,7,8 32/64bit

Kernel               : minim 2.6+ 32/64bit


Prerequisites
=============

CHKCONFIG:
  Make sure your system has installed chkconfig. It is not 
  mandatory but highly recommended.

For Ubuntu/Debian based systems enable cron:
  # update-rc.d cron defaults
  # chkconfig --list cron


KSH93:
  Make sure you have installed ksh93 on your Linux distribution.
  Example for Ubuntu/Debian systems, 64bit:
    apt-get install ksh , this will install ksh93 pkg 
    (ksh_93t+20100309-1_amd64.deb)
   
 
JAVA:
  If you would like to use webrec, make sure you have downloaded
  from your vendor, Oracle Java 6 version. webrec will require at 
  least Java 6. Example for Java 6:

  * Ubuntu/Debian/RedHat:
    # mkdir /opt/java
    # cd java
    # sh jdk-6u45-linux-x64.bin
    # ln -s jdk1.6.0_45 current


SDR Recording module can be installed and administered using two modes:
automatic and manual.


Automatic Mode
==============

  Under automatic mode, the installation and start-up of SDR software
  is done by the package management software: RPM or DEB. The recorders
  and started automatically, after the software has been installed.

  Note: to configure SDR software you need to check sdr.conf and
  manually restart, if needed, the recorders or the transporter part.
  
  1.1 Install SDR package:

    RPM based systems:
    # rpm -ihv sdr-1.0-linux-x86_64.rpm
     Preparing...                ########################################### [100%]
        1:sdr                    ########################################### [100%]
     Starting SDR recorders
      sysrec: ok
      cpurec: ok
      nicrec: ok
      hdwrec: ok

  1.2 Uninstall SDR package:

    RPM based systems:
    # rpm -e sdr
     Stopping SDR recorders
      sysrec: ok
      cpurec: ok
      nicrec: ok
      hdwrec: ok


Manual Mode
===========

  2.1 Install SDR package

    2.1.1 User/Group

      SDR software should be configured to run as sdr user, if possible.
      If not, we can run all recorders as superuser and we can transport
      all sdrd files as sdr user. This way we can separate between super
      user and sdr user.

      Create a specific username/group for SDR. Select 'sdr'
      for a default installation:

        # groupadd -g 500 sdr
        # useradd -u 500 -d /home/sdr -g sdr -m sdr

        Note: sdr username should be part of the system accounts, if possible.
        If 500 id is already reserved make sure you allocate another id
        and properly change the owner of the installation for sdr.

    2.1.2 Package installation

      SDR ships as a RPM, DEB or TAR archive. For manual installation select the
      TAR archive. Place the installation under /opt filesystem.
    
        # cd /opt
        # bzcat sdr-0735-linux-x64.tar.bz2 | tar xvf -


  2.2 Start Procedure

    By default, sdr start-up script will start 5 main recorders: sysrec, cpurec,
    diskrec, nicrec and hdwrec. Edit start-up sdr script, if you require to add
    remove recorders from the start-up list, defined under SDR_SVC variable. 

    Example: 
      * enable sysrec, cpurec, netrec SDR_SVC="sys cpu net"
      * enable sysrec, netrec SDR_SVC="sys net"

    SDR start sequence:   
      # cd /etc/init.d
      # ln -s /opt/sdr/etc/sdr .
      # ln -s /opt/sdr/etc/sdr.transport .
      # chkconfig --add sdr
      # chkconfig --add sdr.transport
      # chkconfig --list sdr
      # chkconfig --list sdr.transport

      # /etc/init.d/sdr start
      Starting SDR recorders
       sysrec: ok
       cpurec: ok
       nicrec: ok
       hdwrec: ok

      Note: On some Debian/Ubuntu based systems we need to sym link insserv before 
      using chkconfig: 
        # ln -s /usr/lib/insserv/insserv /sbin/insserv

    SDR Transport mode is used to send sdrd raw data to a backend system
    for further analysis. Transport mode includes two operating modes:
      
    - Instant Transport Mode
      All sdrd raw data updates are delivered as soon as they happen 
      via HTTP or SSH2. Transport is handled by the sender utility.

      Note: Before starting sender, make sure you have defined under 
      /opt/sdr/etc/sdr.conf a valid subscription id. Without a valid subscription id 
      sender wont be able to start:

      Starting SDR transport
       sender: error: main - no subscription defined, check sdr.conf
      failed

      After you have defined the reporting host, the subscription id and credentials
      you can easily transport sdrd raw data updates, by starting sender:

        # /etc/init.d/sdr.transport start
        Starting SDR transport
         sender: ok
 
    - Batch Transport Mode
      All sdrd raw data files are delivered one time per day, the batch being
      scheduled to run at a fixed time.
          
        # env EDITOR=vi crontab -e
        06 00 * * *  /opt/sdr/bin/raw2day

        Note: We can try to rotate logs as close as possible to midnight. 
        See below example:

        00 00 * * * /bin/sleep 30 && /opt/sdr/bin/raw2day -t sftp
     
 
  2.3 Stop procedure

    # /etc/init.d/sdr stop
    Stopping SDR recorders
     sysrec: ok
     cpurec: ok
     nicrec: ok
     hdwrec: ok

    # /etc/init.d/sdr.transport stop
    Stopping SDR transport
     sender: ok


  2.4 SDRD Raw data file rotation

    sdrd raw data files, from each host must be rotated every night in order to
    keep a clean status of each daily activity. To do this we need to configure
    logrotate on each host being monitored.

    Transport and SDRD Raw data rotation should be configured as sdr username. 
    Enable log rotation every 24hrs. Configure sdr rotation script and raw2day. 
    Edit sdr's crontab, to enable the sdrd raw data rotation and if needed the
    batch transport:

    $ env EDITOR=vi crontab -e
    59 23 * * *  /bin/sleep 59 && /usr/sbin/logrotate -f -s /opt/sdr/log/logsdr.status \
    /opt/sdr/etc/logrotate.sdr
    00 00 * * *  /bin/sleep 30 && /opt/sdr/bin/raw2day -t sftp

    The previous example does rotate sdrd files every 23:59:59 and will
    transport them via SFTP to a reporting backend at 00:00:30, every night.
 

SDR Configuration
=================

  All SDR recorders do have their own start-up scripts under /opt/sdr/etc  
  and do not use any centralized configuration management file. The reason 
  is simple: to minimize the memory usage and keep things simple.

  On the other hand the transport utilities, raw2day and sender use sdr.conf, 
  a XML based type of configuration which defines certain system properties 
  important how and where the sdrd raw data will be delivered.

  Recording element:

    * sender: if you plan to transport sdrd raw data using instant
      mode, transport it as soon as we have it, make sure you configure 
      sender:

      <!-- Instant Monitoring -->
      <sender description="Sender configuration">

        <private_key path="" description="The private authentication key" />

        <!-- Subscription Id -->
        <subscription></subscription>

        <!-- Reporting Destination -->
        <destination>reporting</destination>

        <!-- Transport Modes: http ssh2 -->
        <transport>http</transport>

        <!-- TCP Keepalive 0: disabled, 1: enabled -->
        <tcp_keepalive>0</tcp_keepalive>

        <data>
          <!-- Raw data files -->
          <sdrd name="sys"  description="Overall system sysrec.sdrd" />
          <sdrd name="cpu"  description="Cpu cpurec.sdrd"  />
          <sdrd name="disk" description="Disk diskrec.sdrd" />
          <sdrd name="nic"  description="Nic nicrec.sdrd"  />
          <sdrd name="hdw"  description="Hdw hdwrec.sdrd"  />
        </data>

      </sender>

   
    Reporting element:

    * destination: define where and how you plan to transport your sdrd data.
      There can be one or many reporting servers, defined but only one 
      will be configured under recording element to be used. Configure here 
      the reporting hostname, the http or ssh2 ports if HTTP or SSH2 are running on
      different ports than standard, the credentials: username, password or public key. 

      If you don't specify a valid password automatically means we are using public keys.

      <!-- Destination Reporting Servers -->
      <host name="reporting" ver="0.74" description="SDR Reporting Server">
        <http description="default HTTP port">
          <port>80</port>
          <!-- Via HTTP Proxy -->
          <proxy></proxy>
          <proxyport></proxyport>
        </http>

        <ssh2 description="default SSH2 port">
          <port>22</port>
        </ssh2>

        <username>sdr</username>
        <!-- PLEASE USE SSH Public Key Based Authentication ! -->
        <password></password>
      </host>


Notes
=====

  Diskrec is currently under development and it is not included as part of 
  SDR 0.74 release.

  SDR Recording Linux supports any distribution based on Linux x86_64 kernel
  versions 2.6 at least.  

  SDR uses its own logrotate job in order to be flexible and dont conflict with
  other operating system jobs. raw2day as well is called after the logrotation
  has taken place ! If your installation requires to copy every night the raw
  data to the reporting system, make sure you configure raw2day and check the
  SDR Manual for more information.
